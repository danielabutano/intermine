/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.5).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.intermine.webservice.api;

import org.intermine.webservice.model.Schema;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-06-18T00:14:58.996+05:30[Asia/Kolkata]")
@Api(value = "schema", description = "the schema API")
public interface SchemaApi {

    @ApiOperation(value = "Get all Schemata.", nickname = "allSchema", notes = "Get a listing of the available schemata.", response = Schema.class, tags={ "Schemata" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Schema.class) })
    @RequestMapping(value = "/schema",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Schema> allSchema();


    @ApiOperation(value = "Get one Schema.", nickname = "oneSchema", notes = "Retrieve a specific schema.", tags={ "Schemata" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/schema/{name}/",
        method = RequestMethod.GET)
    ResponseEntity<?> oneSchema(@ApiParam(value = "The name of the schema to retrieve",required=true) @PathVariable("name") String name);

}
